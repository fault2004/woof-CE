#!/bin/bash
#toolbox gui

KEY=$RANDOM

# Run (fix gui/console program when launching)
run_cmd() {
	cd $HOME
	"$1"
}
export -f run_cmd

# Create ABOUT when this file is not found, required.
if [ ! -f "$HOME/ABOUT" ]; then
cat <<EOF > $HOME/ABOUT
 ____  ____  ____   ___  _  _  ____  ____  _  _  ____ 
(  _ \(  __)/ ___) / __)/ )( \(  __)(  _ \/ )( \(  _ \\
 )   / ) _) \___ \( (__ ) \/ ( ) _)  ) __/) \/ ( ) __/
(__\_)(____)(____/ \___)\____/(____)(__)  \____/(__)  
______________________________________________________

Thank you for using RescuePup!
RescuePup is a Live CD/DVD/USB Linux distribution rescue toolbox based on Puppy Linux (Debian).
Built from a custom woof-CE.
The system is running entirely in RAM.

Website: https://rescuepup.sourceforge.io
Github (source code): https://github.com/rescuepuplinux/woof-CE (GPLv2)
Made in Thailand with love.

2023 (c) Supphakit Duanghoy (fault2004)

Included Tools:
efibootmgr (x86_64/64bit ISO only)
gnu-efi (x86_64/64bit ISO only)
inxi
testdisk
gparted
gddrescue
gsmartcontrol
fsarchiver
cloud-guest-utils
chntpw
lvm
ntfs-3g
xfsprogs
btrfs-progs
reiserfsprogs
jfsutils
exfatprogs
f2fs-tools
e2fsprogs
dosfstools
hdparm
minicom
cryptsetup
nvme-cli
hardinfo
nwipe
whdd
EOF
fi

# HDD Tools
menu_hdd() {
	RET="safeaccess_manager\n"
	RET+="SafeAccess Manager\n"
	RET+="(Data Recovery) Set writeblocking to your desired drive.\n"
	RET+="testdisk_launcher\n"
	RET+="Testdisk\n"
	RET+="(Data Recovery) Recover lost partitions or corrupted filesystems.\n"
	RET+="photorec_launcher\n"
	RET+="PhotoRec\n"
	RET+="(Data Recovery) Recover lost files from hard disk and CD-ROM.\n"
	RET+="whdd_launcher\n"
	RET+="Whdd\n"
	RET+="(Data Recovery) HDD diagnostic and data recovery tool for Linux\n"	
	RET+="gparted\n"
	RET+="GParted\n"
	RET+="(Partition) GUI-Based GNU parted.\n"
	RET+="fdisk_launcher\n"
	RET+="Fdisk\n"
	RET+="(Partition) Console-based partitioner.\n"
	RET+="gsmartcontrol\n"
	RET+="GSmartControl\n"
	RET+="(Diagnostic) Inspect drive and control S.M.A.R.T information.\n"
	RET+="nwipe_launcher\n"
	RET+="Nwipe\n"
	RET+="(Destroy) Secure disk eraser.\n"
	echo -e $RET
}
export -f menu_hdd
menu_hdd |\
    yad --plug=$KEY --tabnum=1 \
        --list --column="Command" --column="Name" --column="Description" --dclick-action='bash -c "run_cmd %s"' &

# OS Maintenance
#menu_main() {
	#RET=""
	#echo -e $RET
#}
#export -f menu_main
#menu_main |\
    #yad --plug=$KEY --tabnum=2 \
        #--list --column="Command" --column="Name" --column="Description" --dclick-action='bash -c "run_cmd %s"' &

# SYS Diagnostic
menu_sys() {
	RET="hardinfo\n"
	RET+="HardInfo\n"
	RET+="(Information/Benchmark) Inspect system information.\n"
	echo -e $RET
}
export -f menu_sys
menu_sys |\
    yad --plug=$KEY --tabnum=2 \
        --list --column="Command" --column="Name" --column="Description" --dclick-action='bash -c "run_cmd %s"' &

# NET Tools
menu_net() {
	RET="firefox-esr\n"
	RET+="Firefox ESR\n"
	RET+="(Web browser) Mozilla Firefox Browser.\n"
	RET+="ipinfo\n"
	RET+="IPInfo\n"
	RET+="(Information) Inspect network information.\n"
	echo -e $RET
}
export -f menu_net
menu_net |\
    yad --plug=$KEY --tabnum=3 \
        --list --column="Command" --column="Name" --column="Description" --dclick-action='bash -c "run_cmd %s"' &

# Other
menu_other() {
	RET="lxterminal\n"
	RET+="LXTerminal\n"
	RET+="(Terminal) LXDE Terminal.\n"
	echo -e $RET
}
export -f menu_other
menu_other |\
    yad --plug=$KEY --tabnum=4 \
        --list --column="Command" --column="Name" --column="Description" --dclick-action='bash -c "run_cmd %s"' &

# About
yad --plug=$KEY --tabnum=5 \
        --text-info < $HOME/ABOUT &

# Main Dialog
TXT="\\t<b>Welcome!</b>\\n\\n"
TXT+="\\tYou're now running RescuePup on $(hostname)\\n"
TXT+="\\tKernel: $(uname -sr)\\n\\n"
TXT+="\\tDouble-click selected tool to launch!\\n"

yad --notebook --width=890 --height=500 --center --title="RescuePup - Toolbox" --text="$TXT" --button=gtk-close --key=$KEY \
	--tab="HDD Tools" \
	--tab="SYS Diagnostic" \
	--tab="NET Tools" \
	--tab="Others" \
	--tab="About" \
	--active-tab=${1:-1}
